plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group = 'xyz.reportcards'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://repo.codemc.io/repository/maven-public/' }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    compileOnly "io.papermc.paper:paper-api:1.17-R0.1-SNAPSHOT"

    implementation("de.tr7zw:item-nbt-api:2.12.0-SNAPSHOT") {
        transitive = false
    }

    // Minimessage
    implementation 'net.kyori:adventure-text-minimessage:4.14.0'

    // Apache Commons file utils
    implementation 'commons-io:commons-io:2.11.0'
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate('de.tr7zw.itemnbtapi', 'xyz.reportcards.itemnbtapi')
}